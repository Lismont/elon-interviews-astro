---
import Grid from "../components/Grid.astro"; // Import the Grid component

import BasicLayout from "../layouts/BasicLayout.astro";

const fetchGlobalMeta = async () => {
  const response = await fetch(
    "https://payload-nrx5.onrender.com/api/globals/siteinfos"
  );
  const data = await response.json();
  return data.previewImage.url;
};

const previewImageUrl = await fetchGlobalMeta();

const fetchInterviews = async () => {
  const response = await fetch(
    `https://payload-nrx5.onrender.com/api/interviews?locale=${lang}&fallback-locale=none`
  );
  const data = await response.json();
  return data.docs
    .filter(
      (doc: { languageVersionPublished: boolean }) =>
        doc.languageVersionPublished
    )
    .map(
      ({
        interviewTitle,
        interviewDate,
        url,
        Introduction,
        interviewSlug,
        content,
      }: {
        interviewTitle: string;
        interviewDate: string;
        url: string;
        Introduction: string;
        interviewSlug: string;
        content: any;
      }) => ({
        date: interviewDate,
        title: interviewTitle,
        image: url,
        introduction: Introduction,
        slug: interviewSlug,
        content: content,
      })
    )
    .filter(
      (item: {
        title: string;
        date: string;
        image: string;
        introduction: string;
        slug: string;
      }) =>
        item.title && item.date && item.image && item.introduction && item.slug
    );
};

const fetchData = async (slug: string) => {
  const response = await fetch(
    `https://payload-nrx5.onrender.com/api/pages?locale=${lang}`
  );
  const data = await response.json();
  const page = data.docs.find((doc: any) => doc.slug === slug);
  if (!page) {
    throw new Error(`Page with slug '${slug}' not found`);
  }
  let pageComponents = page.components.map(async (comp: any) => {
    if (comp.blockType === "grid") {
      const interviews = await fetchInterviews();
      return interviews.map((interview: any) => ({
        ...interview,
        type: "grid",
      }));
    } else if (comp.blockType === "textfield") {
      return { richtext: comp.richText, type: "text" };
    }
  });
  const components = await Promise.all(pageComponents);
  return {
    pageMeta: {
      pageTitle: page.pageTitle, // Uncomment and adjust according to actual data structure if needed
      // description: "Page description here", // Adjust as needed
    },
    id: page.id,
    components: components.flat(),
  };
};

const { slug, lang } = Astro.props;
const { pageMeta, components, id } = await fetchData(slug);
const gridItems = components.filter((component) => component.type === "grid");
---

<BasicLayout lang={lang} contentType="page" id={id}>
  <Grid gridItems={gridItems} lang={lang} />
</BasicLayout>
